{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rba/Neuefische/GitRepositories/W3D5_ConnectBackendToFrontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rba/Neuefische/GitRepositories/W3D5_ConnectBackendToFrontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{addTodo,getTodos,deleteTodo,setTodoStatus}from\"../../service/todo-service\";export var FETCH_TODOS='FETCH_TODOS';export var FETCH_TODOS_SUCCESS='FETCH_TODOS_SUCCESS';export var FETCH_TODOS_FAILED='FETCH_TODOS_FAILED';var fetchItems=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:FETCH_TODOS});_context.prev=1;_context.next=4;return getTodos();case 4:response=_context.sent;dispatch({type:FETCH_TODOS_SUCCESS,todos:response.data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch({type:FETCH_TODOS_FAILED,error:_context.t0});case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function fetchItems(_x){return _ref.apply(this,arguments);};}();export var ADD_TODO='ADD_TODO';export var ADD_TODO_SUCCESS='ADD_TODO_SUCCESS';export var ADD_TODO_FAILED='ADD_TODO_FAILED';var addItem=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,description){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:ADD_TODO});_context2.prev=1;_context2.next=4;return addTodo(description);case 4:response=_context2.sent;dispatch({type:ADD_TODO_SUCCESS,todo:response.data});_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);dispatch({type:ADD_TODO_FAILED,error:_context2.t0});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));return function addItem(_x2,_x3){return _ref2.apply(this,arguments);};}();export var DELETE_TODO='DELETE_TODO';export var DELETE_TODO_SUCCESS='DELETE_TODO_SUCCESS';export var DELETE_TODO_FAILED='DELETE_TODO_FAILED';var deleteItem=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,id){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch({type:DELETE_TODO,payload:id});_context3.prev=1;_context3.next=4;return deleteTodo(id);case 4:dispatch({type:DELETE_TODO_SUCCESS,id:id});_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](1);dispatch({type:DELETE_TODO_FAILED,error:_context3.t0});case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[1,7]]);}));return function deleteItem(_x4,_x5){return _ref3.apply(this,arguments);};}();export var SET_TODO_STATUS='SET_TODO_STATUS';export var SET_TODO_STATUS_SUCCESS='SET_TODO_STATUS_SUCCESS';export var SET_TODO_STATUS_FAILED='SET_TODO_STATUS_FAILED';var setItemStatus=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,id,status){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch({type:SET_TODO_STATUS,payload:{id:id,status:status}});_context4.prev=1;_context4.next=4;return setTodoStatus(id,status);case 4:response=_context4.sent;dispatch({type:SET_TODO_STATUS_SUCCESS,todo:response.data});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](1);dispatch({type:SET_TODO_STATUS_FAILED,error:_context4.t0});case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[1,8]]);}));return function setItemStatus(_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();export{fetchItems,addItem,deleteItem,setItemStatus};","map":{"version":3,"sources":["/Users/rba/Neuefische/GitRepositories/W3D5_ConnectBackendToFrontend/frontend/src/context/todo/todo-actions.js"],"names":["addTodo","getTodos","deleteTodo","setTodoStatus","FETCH_TODOS","FETCH_TODOS_SUCCESS","FETCH_TODOS_FAILED","fetchItems","dispatch","type","response","todos","data","error","ADD_TODO","ADD_TODO_SUCCESS","ADD_TODO_FAILED","addItem","description","todo","DELETE_TODO","DELETE_TODO_SUCCESS","DELETE_TODO_FAILED","deleteItem","id","payload","SET_TODO_STATUS","SET_TODO_STATUS_SUCCESS","SET_TODO_STATUS_FAILED","setItemStatus","status"],"mappings":"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","sourcesContent":["import {addTodo, getTodos, deleteTodo, setTodoStatus} from \"../../service/todo-service\";\n\nexport const FETCH_TODOS = 'FETCH_TODOS';\nexport const FETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS';\nexport const FETCH_TODOS_FAILED = 'FETCH_TODOS_FAILED';\n\nconst fetchItems = async (dispatch) => {\n    dispatch({type: FETCH_TODOS});\n    try {\n        const response = await getTodos();\n        dispatch({type: FETCH_TODOS_SUCCESS, todos: response.data});\n    } catch (error) {\n        dispatch({type: FETCH_TODOS_FAILED, error});\n    }\n};\n\nexport const ADD_TODO = 'ADD_TODO';\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\nexport const ADD_TODO_FAILED = 'ADD_TODO_FAILED';\n\nconst addItem = async (dispatch, description) => {\n    dispatch({type: ADD_TODO});\n    try {\n        const response = await addTodo(description);\n        dispatch({type: ADD_TODO_SUCCESS, todo: response.data});\n    } catch (error) {\n        dispatch({type: ADD_TODO_FAILED, error});\n    }\n};\n\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const DELETE_TODO_SUCCESS = 'DELETE_TODO_SUCCESS';\nexport const DELETE_TODO_FAILED = 'DELETE_TODO_FAILED';\n\nconst deleteItem = async (dispatch, id) => {\n    dispatch({type: DELETE_TODO, payload: id});\n    try {\n        await deleteTodo(id);\n        dispatch({type: DELETE_TODO_SUCCESS, id});\n    } catch (error) {\n        dispatch({type: DELETE_TODO_FAILED, error});\n    }\n};\n\nexport const SET_TODO_STATUS = 'SET_TODO_STATUS';\nexport const SET_TODO_STATUS_SUCCESS = 'SET_TODO_STATUS_SUCCESS';\nexport const SET_TODO_STATUS_FAILED = 'SET_TODO_STATUS_FAILED';\n\nconst setItemStatus = async (dispatch, id, status) => {\n    dispatch({type: SET_TODO_STATUS, payload: {id, status}});\n    try {\n        const response = await setTodoStatus(id, status);\n        dispatch({type: SET_TODO_STATUS_SUCCESS, todo: response.data});\n    } catch (error) {\n        dispatch({type: SET_TODO_STATUS_FAILED, error});\n    }\n};\n\nexport {\n    fetchItems,\n    addItem,\n    deleteItem,\n    setItemStatus\n};\n"]},"metadata":{},"sourceType":"module"}